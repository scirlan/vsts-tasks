{
    "id": "AC4EE482-65DA-4485-A532-7B085873E532",
    "name": "Maven",
    "friendlyName": "Maven",
    "description": "Build with Apache Maven",
    "helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613723)",
    "category": "Build",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "demands": [
        "maven"
    ],
    "version": {
        "Major": 1,
        "Minor": 0,
        "Patch": 74
    },
    "minimumAgentVersion": "1.89.0",
    "instanceNameFormat": "Maven $(mavenPOMFile)",
    "groups": [
        {
            "name": "junitTestResults",
            "displayName": "JUnit Test Results",
            "isExpanded": true
        },
        {
            "name": "codeCoverage",
            "displayName": "Code Coverage",
            "isExpanded": true
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "CodeAnalysis",
            "displayName": "Code Analysis",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "mavenPOMFile",
            "type": "filePath",
            "label": "Maven POM file",
            "defaultValue": "pom.xml",
            "required": true,
            "helpMarkDown": "Relative path from the repository root to the Maven POM file."
        },
        {
            "name": "options",
            "type": "string",
            "label": "Options",
            "defaultValue": "",
            "required": false
        },
        {
            "name": "goals",
            "type": "string",
            "label": "Goal(s)",
            "defaultValue": "package",
            "required": false
        },
        {
            "name": "publishJUnitResults",
            "type": "boolean",
            "label": "Publish to TFS/Team Services",
            "required": true,
            "defaultValue": "true",
            "groupName": "junitTestResults",
            "helpMarkDown": "Select this option to publish JUnit test results produced by the Maven build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services."
        },
        {
            "name": "testResultsFiles",
            "type": "filePath",
            "label": "Test Results Files",
            "defaultValue": "**/TEST-*.xml",
            "required": true,
            "groupName": "junitTestResults",
            "helpMarkDown": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
            "visibleRule": "publishJUnitResults = true"
        },
        {
            "name": "testRunTitle",
            "type": "string",
            "label": "Test Run Title",
            "defaultValue": "",
            "required": false,
            "groupName": "junitTestResults",
            "helpMarkDown": "Provide a name for the test run.",
            "visibleRule": "publishJUnitResults = true"
        },
        {
            "name": "codeCoverageTool",
            "type": "pickList",
            "label": "Code Coverage Tool",
            "required": false,
            "groupName": "codeCoverage",
            "defaultValue": "None",
            "helpMarkDown": "Select the code coverage tool.",
            "options": {
                "None": "None",
                "Cobertura": "Cobertura",
                "JaCoCo": "JaCoCo"
            }
        },
        {
            "name": "classFilter",
            "type": "string",
            "label": "Class Inclusion/Exclusion Filters",
            "defaultValue": "",
            "required": false,
            "groupName": "codeCoverage",
            "helpMarkDown": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
            "visibleRule": "codeCoverageTool != None"
        },
        {
            "name": "classFilesDirectories",
            "type": "string",
            "label": "Class Files Directories",
            "required": false,
            "groupName": "codeCoverage",
            "helpMarkDown": "This field is required for a multi-module project. Specify a comma-separated list of relative paths from the Maven POM file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
            "visibleRule": "codeCoverageTool = JaCoCo"
        },
        {
            "name": "srcDirectories",
            "type": "string",
            "label": "Source Files Directories",
            "defaultValue": "",
            "required": false,
            "groupName": "codeCoverage",
            "helpMarkDown": "This field is required for a multi-module project. Specify a comma-separated list of relative paths from the Maven POM file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
            "visibleRule": "codeCoverageTool = JaCoCo"
        },
        {
            "name": "javaHomeSelection",
            "type": "radio",
            "label": "Set JAVA_HOME by",
            "required": true,
            "groupName": "advanced",
            "defaultValue": "JDKVersion",
            "helpMarkDown": "Sets JAVA_HOME either by selecting a JDK version that will be discovered during builds or by manually entering a JDK path.",
            "options": {
                "JDKVersion": "JDK Version",
                "Path": "Path"
            }
        },
        {
            "name": "jdkVersion",
            "type": "pickList",
            "label": "JDK Version",
            "required": false,
            "groupName": "advanced",
            "defaultValue": "default",
            "helpMarkDown": "Will attempt to discover the path to the selected JDK version and set JAVA_HOME accordingly.",
            "visibleRule": "javaHomeSelection = JDKVersion",
            "options": {
                "default": "default",
                "1.8": "JDK 8",
                "1.7": "JDK 7",
                "1.6": "JDK 6"
            }
        },
        {
            "name": "jdkUserInputPath",
            "type": "string",
            "label": "JDK Path",
            "required": true,
            "groupName": "advanced",
            "defaultValue": "",
            "helpMarkDown": "Sets JAVA_HOME to the given path.",
            "visibleRule": "javaHomeSelection = Path"
        },
        {
            "name": "jdkArchitecture",
            "type": "pickList",
            "label": "JDK Architecture",
            "defaultValue": "x86",
            "required": false,
            "helpMarkDown": "Optionally supply the architecture (x86, x64) of the JDK.",
            "groupName": "advanced",
            "options": {
                "x86": "x86",
                "x64": "x64"
            }
        },
        {
            "name": "mavenVersionSelection",
            "type": "radio",
            "label": "Maven Version",
            "defaultValue": "Default",
            "required": true,
            "groupName": "advanced",
            "helpMarkDown": "Uses either the default Maven version or the version in the specified custom path.",
            "options": {
                "Default": "Default",
                "Path": "Custom Path"
            }
        },
        {
            "name": "mavenPath",
            "type": "string",
            "label": "Maven Path",
            "required": true,
            "groupName": "advanced",
            "defaultValue": "",
            "helpMarkDown": "Supply the custom path to the Maven installation (e.g., /usr/share/maven).",
            "visibleRule": "mavenVersionSelection = Path"
        },
        {
            "name": "mavenSetM2Home",
            "type": "boolean",
            "label": "Set M2_HOME variable",
            "required": true,
            "defaultValue": "false",
            "groupName": "advanced",
            "helpMarkDown": "Sets the M2_HOME variable to a custom Maven installation path.",
            "visibleRule": "mavenVersionSelection = Path"
        },
           {
            "name": "mavenOpts",
            "type": "string",
            "label": "Set MAVEN_OPTS to",
            "required": false,
            "groupName": "advanced",
            "defaultValue": "-Xmx1024m",
            "helpMarkDown": "Sets the MAVEN_OPTS enviroment variable, which is used to send command-line arguments to start the JVM. The xmx flag specifies the maximum memory available to the JVM."
        },
        {
            "name": "sqAnalysisEnabled",
            "type": "boolean",
            "label": "Run SonarQube Analysis",
            "required": true,
            "defaultValue": "false",
            "groupName": "CodeAnalysis",
            "helpMarkDown": "Run a [SonarQube analysis](https://go.microsoft.com/fwlink/?LinkID=708598) after executing the current goals. 'install' or 'package' goals should be executed first."
        },
        {
            "name": "sqConnectedServiceName",
            "type": "connectedService:Generic",
            "label": "SonarQube Endpoint",
            "required": true,
            "helpMarkDown": "The SonarQube server generic endpoint",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqAnalysisEnabled = true"
        },
        {
            "name": "sqDbDetailsRequired",
            "type": "boolean",
            "label": "The SonarQube server version is lower than 5.2",
            "required": true,
            "defaultValue": "false",
            "groupName": "CodeAnalysis",
            "helpMarkDown": "If using a SonarQube server 5.1 or lower, you must specify the database connection details.",
            "visibleRule": "sqAnalysisEnabled = true"
        },
        {
            "name": "sqDbUrl",
            "type": "string",
            "label": "Db Connection String",
            "required": false,
            "helpMarkDown": "SonarQube server 5.1 and lower only. Enter the database connection setting (i.e. sonar.jdbc.url). For example: jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqDbDetailsRequired = true"
        },
        {
            "name": "sqDbUsername",
            "type": "string",
            "label": "Db Username",
            "required": false,
            "helpMarkDown": "SonarQube server 5.1 and lower only. Enter the username for the database user (i.e. sonar.jdbc.username).",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqDbDetailsRequired = true"
        },
        {
            "name": "sqDbPassword",
            "type": "string",
            "label": "Db User Password",
            "required": false,
            "helpMarkDown": "SonarQube server 5.1 and lower only. Enter the password for the database user i.e. sonar.jdbc.password",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqDbDetailsRequired = true"
        },
        {
            "name": "sqAnalysisIncludeFullReport",
            "type": "boolean",
            "defaultValue": "true",
            "label": "Include full analysis report in the build summary (SQ 5.3+)",
            "required": false,
            "helpMarkDown": "This option will delay the build until the SonarQube analysis is completed.",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqAnalysisEnabled = true"
        },
        {
            "name": "sqAnalysisBreakBuildIfQualityGateFailed",
            "type": "boolean",
            "defaultValue": "",
            "label": "Fail the build on quality gate failure (SQ 5.3+)",
            "required": false,
            "helpMarkDown": "This option is only available when using a SonarQube server 5.3 or above. It will introduce delays as the build must wait for SonarQube to complete the analysis. [More information](https://go.microsoft.com/fwlink/?LinkId=722407)",
            "groupName": "CodeAnalysis",
            "visibleRule": "sqAnalysisEnabled = true"
        },
        {
            "name": "checkstyleAnalysisEnabled",
            "type": "boolean",
            "label": "Run Checkstyle",
            "required": false,
            "defaultValue": "false",
            "groupName": "CodeAnalysis",
            "helpMarkDown": "Run the Checkstyle tool with the default Sun checks. Results are uploaded as build artifacts."
        },
        {
            "name": "pmdAnalysisEnabled",
            "type": "boolean",
            "label": "Run PMD",
            "required": false,
            "defaultValue": "false",
            "groupName": "CodeAnalysis",
            "helpMarkDown": "Use the PMD static analysis tool to look for bugs in the code. Results are uploaded as build artifacts."
        },
        {
            "name": "findbugsAnalysisEnabled",
            "type": "boolean",
            "label": "Run FindBugs",
            "required": false,
            "defaultValue": "false",
            "groupName": "CodeAnalysis",
            "helpMarkDown": "Use the FindBugs static analysis tool to look for bugs in the code. Results are uploaded as build artifacts."
        }
    ],
    "execution": {
        "Node": {
            "target": "maventask.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "sqCommon_CreateTaskReport_MissingField": "Failed to create TaskReport object. Missing field: %s",
        "sqCommon_WaitingForAnalysis": "Waiting for the SonarQube server to analyse the build.",
        "sqCommon_NotWaitingForAnalysis": "Build not configured to wait for the SonarQube analysis. Detailed quality gate status will not be available.",
        "sqCommon_QualityGateStatusUnknown": "Could not detect the quality gate status or a new status has been introduced.",
        "sqCommon_InvalidResponseFromServer": "Server responded with an invalid or unexpected response format.",
        "codeAnalysis_ToolIsEnabled": "%s analysis is enabled.",
        "codeAnalysis_ToolFailed": "%s analysis failed.",
        "sqAnalysis_IncrementalMode": "Detected a PR build - running the SonarQube analysis in incremental mode",
        "sqAnalysis_BuildSummaryTitle": "SonarQube Analysis Report",
        "sqAnalysis_TaskReportInvalid": "Invalid or missing task report. Check SonarQube finished successfully.",
        "sqAnalysis_BuildSummary_LinkText": "Detailed SonarQube report",
        "sqAnalysis_BuildSummary_CannotAuthenticate": "Cannot authenticate to the SonarQube server. Check the saved endpoint details and the status of the server.",
        "sqAnalysis_AnalysisTimeout": "The analysis did not complete in the allotted time of %d seconds.",
        "sqAnalysis_IsPullRequest_SkippingBuildSummary": "Pull request build: detailed SonarQube build summary will not be available.",
        "sqAnalysis_IsPullRequest_SkippingBuildBreaker": "Pull request build: build will not be broken if quality gate fails.",
        "sqAnalysis_BuildBrokenDueToQualityGateFailure": "The SonarQube quality gate associated with this build has failed.",
        "sqAnalysis_QualityGatePassed": "The SonarQube quality gate associated with this build has passed (status %s)",
        "sqAnalysis_UnknownComparatorString": "The SonarQube build summary encountered a problem: unknown comparator '%s'",
        "sqAnalysis_NoUnitsFound": "The list of SonarQube measurement units could not be retrieved from the server.",
        "sqAnalysis_NoReportTask": "Could not find report-task.txt. Possible cause: the SonarQube analysis did not complete successfully.",
        "sqAnalysis_MultipleReportTasks": "Multiple report-task.txt files found. Choosing the first one. The build summary and the build breaker may not be accurate. Possible cause: multiple SonarQube analysis during the same build, which is not supported.",
        "codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s found %d violations in %d files.",
        "codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s found %d violations in 1 file.",
        "codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s found 1 violation in 1 file.",
        "codeAnalysisBuildSummaryLine_NoViolations": "%s found no violations.",
        "codeAnalysisBuildSummaryTitle": "Code Analysis Report",
        "codeAnalysisArtifactSummaryTitle": "Code Analysis Results",
        "codeAnalysisDisabled": "Code analysis is disabled outside of the build enviroment. Could not find a value for: %s",
        "LocateJVMBasedOnVersionAndArch": "Locate JAVA_HOME for Java %s %s",
        "FailedToLocateSpecifiedJVM": "Failed to find specified JDK version. Please make sure environment variable '%s' exists and is set to the location of a corresponding JDK."
       
    }
}
